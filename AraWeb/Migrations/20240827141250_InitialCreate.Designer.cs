// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace AraWeb.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240827141250_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApartmentId");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BedsCount")
                        .HasColumnType("int");

                    b.Property<double>("CapacitySquare")
                        .HasColumnType("float");

                    b.Property<int>("GuestsCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<long>("ReviewsCount")
                        .HasColumnType("bigint");

                    b.Property<int>("RoomsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Entities.Models.Occupancy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EvictionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OccupancyDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReservedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("ReservedById");

                    b.ToTable("Occupancies");
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.ReservationDate", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ApartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ExtraCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OccupancyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReservedById")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Date");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("OccupancyId");

                    b.HasIndex("ReservedById");

                    b.ToTable("ReservationDates");
                });

            modelBuilder.Entity("Entities.Models.Apartment", b =>
                {
                    b.HasOne("Entities.Models.User", "Owner")
                        .WithMany("Apartments")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Entities.Models.Occupancy", b =>
                {
                    b.HasOne("Entities.Models.Apartment", "Apartment")
                        .WithMany("Occupancies")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.User", "ReservedBy")
                        .WithMany()
                        .HasForeignKey("ReservedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("ReservedBy");
                });

            modelBuilder.Entity("Entities.ReservationDate", b =>
                {
                    b.HasOne("Entities.Models.Apartment", "Apartment")
                        .WithMany("ReservationDates")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Occupancy", "Occupancy")
                        .WithMany("ReservedDates")
                        .HasForeignKey("OccupancyId");

                    b.HasOne("Entities.Models.User", "ReservedBy")
                        .WithMany()
                        .HasForeignKey("ReservedById");

                    b.Navigation("Apartment");

                    b.Navigation("Occupancy");

                    b.Navigation("ReservedBy");
                });

            modelBuilder.Entity("Entities.Models.Apartment", b =>
                {
                    b.Navigation("Occupancies");

                    b.Navigation("ReservationDates");
                });

            modelBuilder.Entity("Entities.Models.Occupancy", b =>
                {
                    b.Navigation("ReservedDates");
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Navigation("Apartments");
                });
#pragma warning restore 612, 618
        }
    }
}
